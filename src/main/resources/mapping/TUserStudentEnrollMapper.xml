<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.wuling.mapper.TUserStudentEnrollMapper" >
  <resultMap id="BaseResultMap" type="com.example.wuling.model.TUserStudentEnroll" >
    <id column="enroll_id" property="enrollId" jdbcType="INTEGER" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="enroll_date" property="enrollDate" jdbcType="TIMESTAMP" />
    <result column="cert" property="cert" jdbcType="VARCHAR" />
    <result column="fee_payed" property="feePayed" jdbcType="INTEGER" />
    <result column="fee_unpayed" property="feeUnpayed" jdbcType="INTEGER" />
    <result column="education" property="education" jdbcType="INTEGER" />
    <result column="insurance" property="insurance" jdbcType="INTEGER" />
    <result column="computor" property="computor" jdbcType="INTEGER" />
    <result column="board" property="board" jdbcType="INTEGER" />
    <result column="buy_edu" property="buyEdu" jdbcType="INTEGER" />
    <result column="introduce_cst_id" property="introduceCstId" jdbcType="INTEGER" />
    <result column="introduce_fee" property="introduceFee" jdbcType="INTEGER" />
    <result column="charge_cst_id" property="chargeCstId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="operator_user_id" property="operatorUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    enroll_id, customer_name, student_id, customer_id, class_id, enroll_date, cert, fee_payed,
    fee_unpayed, education, insurance, computor, board, buy_edu, introduce_cst_id, introduce_fee,
    charge_cst_id, create_time, update_time, status, operator_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.wuling.model.TUserStudentEnrollExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user_student_enroll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_user_student_enroll
    where enroll_id = #{enrollId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user_student_enroll
    where enroll_id = #{enrollId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.wuling.model.TUserStudentEnrollExample" >
    delete from t_user_student_enroll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.wuling.model.TUserStudentEnroll" useGeneratedKeys="true" keyProperty="enrollId">
    insert into t_user_student_enroll (enroll_id, customer_name, student_id,
      customer_id, class_id, enroll_date,
      cert, fee_payed, fee_unpayed,
      education, insurance, computor,
      board, buy_edu, introduce_cst_id,
      introduce_fee, charge_cst_id, create_time,
      update_time, status, operator_user_id
      )
    values (#{enrollId,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER},
      #{customerId,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER}, #{enrollDate,jdbcType=TIMESTAMP},
      #{cert,jdbcType=VARCHAR}, #{feePayed,jdbcType=INTEGER}, #{feeUnpayed,jdbcType=INTEGER},
      #{education,jdbcType=INTEGER}, #{insurance,jdbcType=INTEGER}, #{computor,jdbcType=INTEGER},
      #{board,jdbcType=INTEGER}, #{buyEdu,jdbcType=INTEGER}, #{introduceCstId,jdbcType=INTEGER},
      #{introduceFee,jdbcType=INTEGER}, #{chargeCstId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{operatorUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.wuling.model.TUserStudentEnroll" >
    insert into t_user_student_enroll
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="enrollId != null" >
        enroll_id,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="enrollDate != null" >
        enroll_date,
      </if>
      <if test="cert != null" >
        cert,
      </if>
      <if test="feePayed != null" >
        fee_payed,
      </if>
      <if test="feeUnpayed != null" >
        fee_unpayed,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="insurance != null" >
        insurance,
      </if>
      <if test="computor != null" >
        computor,
      </if>
      <if test="board != null" >
        board,
      </if>
      <if test="buyEdu != null" >
        buy_edu,
      </if>
      <if test="introduceCstId != null" >
        introduce_cst_id,
      </if>
      <if test="introduceFee != null" >
        introduce_fee,
      </if>
      <if test="chargeCstId != null" >
        charge_cst_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="operatorUserId != null" >
        operator_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="enrollId != null" >
        #{enrollId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="enrollDate != null" >
        #{enrollDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cert != null" >
        #{cert,jdbcType=VARCHAR},
      </if>
      <if test="feePayed != null" >
        #{feePayed,jdbcType=INTEGER},
      </if>
      <if test="feeUnpayed != null" >
        #{feeUnpayed,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        #{education,jdbcType=INTEGER},
      </if>
      <if test="insurance != null" >
        #{insurance,jdbcType=INTEGER},
      </if>
      <if test="computor != null" >
        #{computor,jdbcType=INTEGER},
      </if>
      <if test="board != null" >
        #{board,jdbcType=INTEGER},
      </if>
      <if test="buyEdu != null" >
        #{buyEdu,jdbcType=INTEGER},
      </if>
      <if test="introduceCstId != null" >
        #{introduceCstId,jdbcType=INTEGER},
      </if>
      <if test="introduceFee != null" >
        #{introduceFee,jdbcType=INTEGER},
      </if>
      <if test="chargeCstId != null" >
        #{chargeCstId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="operatorUserId != null" >
        #{operatorUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.wuling.model.TUserStudentEnrollExample" resultType="java.lang.Integer" >
    select count(*) from t_user_student_enroll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user_student_enroll
    <set >
      <if test="record.enrollId != null" >
        enroll_id = #{record.enrollId,jdbcType=INTEGER},
      </if>
      <if test="record.customerName != null" >
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.enrollDate != null" >
        enroll_date = #{record.enrollDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cert != null" >
        cert = #{record.cert,jdbcType=VARCHAR},
      </if>
      <if test="record.feePayed != null" >
        fee_payed = #{record.feePayed,jdbcType=INTEGER},
      </if>
      <if test="record.feeUnpayed != null" >
        fee_unpayed = #{record.feeUnpayed,jdbcType=INTEGER},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.insurance != null" >
        insurance = #{record.insurance,jdbcType=INTEGER},
      </if>
      <if test="record.computor != null" >
        computor = #{record.computor,jdbcType=INTEGER},
      </if>
      <if test="record.board != null" >
        board = #{record.board,jdbcType=INTEGER},
      </if>
      <if test="record.buyEdu != null" >
        buy_edu = #{record.buyEdu,jdbcType=INTEGER},
      </if>
      <if test="record.introduceCstId != null" >
        introduce_cst_id = #{record.introduceCstId,jdbcType=INTEGER},
      </if>
      <if test="record.introduceFee != null" >
        introduce_fee = #{record.introduceFee,jdbcType=INTEGER},
      </if>
      <if test="record.chargeCstId != null" >
        charge_cst_id = #{record.chargeCstId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.operatorUserId != null" >
        operator_user_id = #{record.operatorUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user_student_enroll
    set enroll_id = #{record.enrollId,jdbcType=INTEGER},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      enroll_date = #{record.enrollDate,jdbcType=TIMESTAMP},
      cert = #{record.cert,jdbcType=VARCHAR},
      fee_payed = #{record.feePayed,jdbcType=INTEGER},
      fee_unpayed = #{record.feeUnpayed,jdbcType=INTEGER},
      education = #{record.education,jdbcType=INTEGER},
      insurance = #{record.insurance,jdbcType=INTEGER},
      computor = #{record.computor,jdbcType=INTEGER},
      board = #{record.board,jdbcType=INTEGER},
      buy_edu = #{record.buyEdu,jdbcType=INTEGER},
      introduce_cst_id = #{record.introduceCstId,jdbcType=INTEGER},
      introduce_fee = #{record.introduceFee,jdbcType=INTEGER},
      charge_cst_id = #{record.chargeCstId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      operator_user_id = #{record.operatorUserId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wuling.model.TUserStudentEnroll" >
    update t_user_student_enroll
    <set >
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="enrollDate != null" >
        enroll_date = #{enrollDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cert != null" >
        cert = #{cert,jdbcType=VARCHAR},
      </if>
      <if test="feePayed != null" >
        fee_payed = #{feePayed,jdbcType=INTEGER},
      </if>
      <if test="feeUnpayed != null" >
        fee_unpayed = #{feeUnpayed,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="insurance != null" >
        insurance = #{insurance,jdbcType=INTEGER},
      </if>
      <if test="computor != null" >
        computor = #{computor,jdbcType=INTEGER},
      </if>
      <if test="board != null" >
        board = #{board,jdbcType=INTEGER},
      </if>
      <if test="buyEdu != null" >
        buy_edu = #{buyEdu,jdbcType=INTEGER},
      </if>
      <if test="introduceCstId != null" >
        introduce_cst_id = #{introduceCstId,jdbcType=INTEGER},
      </if>
      <if test="introduceFee != null" >
        introduce_fee = #{introduceFee,jdbcType=INTEGER},
      </if>
      <if test="chargeCstId != null" >
        charge_cst_id = #{chargeCstId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="operatorUserId != null" >
        operator_user_id = #{operatorUserId,jdbcType=INTEGER},
      </if>
    </set>
    where enroll_id = #{enrollId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wuling.model.TUserStudentEnroll" >
    update t_user_student_enroll
    set customer_name = #{customerName,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      enroll_date = #{enrollDate,jdbcType=TIMESTAMP},
      cert = #{cert,jdbcType=VARCHAR},
      fee_payed = #{feePayed,jdbcType=INTEGER},
      fee_unpayed = #{feeUnpayed,jdbcType=INTEGER},
      education = #{education,jdbcType=INTEGER},
      insurance = #{insurance,jdbcType=INTEGER},
      computor = #{computor,jdbcType=INTEGER},
      board = #{board,jdbcType=INTEGER},
      buy_edu = #{buyEdu,jdbcType=INTEGER},
      introduce_cst_id = #{introduceCstId,jdbcType=INTEGER},
      introduce_fee = #{introduceFee,jdbcType=INTEGER},
      charge_cst_id = #{chargeCstId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      operator_user_id = #{operatorUserId,jdbcType=INTEGER}
    where enroll_id = #{enrollId,jdbcType=INTEGER}
  </update>
</mapper>
